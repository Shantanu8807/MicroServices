<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="jakarta.annotation.Generated"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="org.hibernate.annotations.GenericGenerator"/>
    <fullyQualifiedTypeName name="com.account.entity.BaseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="com.account.service.IAccountsService"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="com.account.mapper.CustomerMapper"/>
    <fullyQualifiedTypeName name="org.springframework.web.context.request.WebRequest"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="com.account.exception.CustomerAlreadyExistsException"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.account.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="com.account.mapper.AccountsMapper"/>
    <fullyQualifiedTypeName name="com.account.dto.AccountsDto"/>
    <fullyQualifiedTypeName name="com.account.contants.Constants"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatusCode"/>
    <fullyQualifiedTypeName name="jakarta.transaction.Transactional"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
</qualifiedTypeNameHistroy>
