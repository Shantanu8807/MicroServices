spring.application.name=gatewayserver

server.port=8072

spring.config.import=optional:configserver:http://localhost:8071/
spring.cloud.config.uri=http://localhost:8071

eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8070/eureka/

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
management.endpoints.web.exposure.include=*
management.endpoint.gateway.enabled=true


logging.level.com.gatewayserver=debug



#circuit breaker properties configuration


#instead of deafult we can use circuit breaker name defined in java class in main class
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
#after 10 secs we can again hit the api again and check if api is up or not otherwise circuit breaker will throw service unavailable error 
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=10000



#property for enabling http time out so that service doesnot have to wait for more time to get the response

spring.cloud.gateway.httpclient.connect-timeout=1000 
# Connection timeout in milliseconds
spring.cloud.gateway.httpclient.response-timeout=2s  
# Response timeout in seconds
