spring.application.name=loans

spring.config.import=optional:configserver:http://localhost:8071/

server.port=8081


spring.profiles.active=prod

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true

management.endpoints.web.exposure.include=*

#connecting with eureka server 
eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8070/eureka/

info.app.name=loans
info.app.description=loans microservice
info.app.version=1.0.0
management.info.env.enabled=true
management.endpoint.shutdown.enabled=true

endpoints.shutdown.enabled=true

#rabbitmq and spring cloud bus will use single api for refreshing  fro all the microservices the config properties  we have an api http://localhost:8080/actuator/busReferesh


##more over to overcome this we have <dependency>
#			<groupId>org.springframework.cloud</groupId>
#			<artifactId>spring-cloud-config-monitor</artifactId>
#		</dependency>  this dependency create an api endpoint this dependency is included in config server only for this we have to create git hub webhook 

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest



logging.level.com.loan=debug


#accounts.msg=Welcome to loans service
#accounts.contactDetails.name=shantanu
#accounts.contactDetails.email=shantanu@gmail.com
#accounts.onCallSupport=9999009900,9879787899

